/***********************************************************
Q1
1/1 point (graded)
Find the names of all students who are friends with someone named Gabriel.
***********************************************************/
select H2.name
from Highschooler H1, Highschooler H2, Friend
where H1.ID=Friend.ID1 and H2.ID=Friend.ID2
  	 and H1.name = "Gabriel"

/***********************************************************
Q2
1/1 point (graded)
For every student who likes someone 2 or more grades younger than themselves, return that student's name and grade, and the name and grade of the student they like.
***********************************************************/
select H1.name, H1.grade, H2.name, H2.grade
from Highschooler H1, Highschooler H2, Likes
where H1.ID=Likes.ID1 and H2.ID=Likes.ID2
     and (H1.grade-H2.grade) >= 2

/***********************************************************
Q3
1/1 point (graded)
For every pair of students who both like each other, return the name and grade of both students. Include each pair only once, with the two names in alphabetical order.
***********************************************************/
select  A.a, aGrade, A.b, bGrade
from (select H1.name as a, H1.grade as aGrade, H2.name as b, H2.grade as bGrade
	  from Highschooler H1, Highschooler H2, Likes
	  where H1.ID=Likes.ID1 and H2.ID=Likes.ID2
          and H1.name<H2.name) A,
	(select H1.name as a, H2.name as b
         from Highschooler H1, Highschooler H2, Likes
         where H1.ID=Likes.ID1 and H2.ID=Likes.ID2
          and H2.name<H1.name) B
where A.a=B.b and A.b=B.a

/***********************************************************
Q4
1/1 point (graded)
Find all students who do not appear in the Likes table (as a student who likes or is liked) and return their names and grades. Sort by grade, then by name within each grade.
***********************************************************/
select name, grade
from Highschooler
where ID not in (select ID1
				from likes
				union
				select ID2
				from likes)
order by grade, name

/***********************************************************
Q5
1/1 point (graded)
For every situation where student A likes student B, but we have no information about whom B likes (that is, B does not appear as an ID1 in the Likes table), return A and B's names and grades.
***********************************************************/
select H1.name, H1.grade, H2.name, H2.grade 
from Highschooler H1, Highschooler H2, Likes
where H1.ID=Likes.ID1 and H2.ID=Likes.ID2
    and ID2 not in (select ID1
					from likes)

/***********************************************************
Q6
1/1 point (graded)
Find names and grades of students who only have friends in the same grade. Return the result sorted by grade, then by name within each grade.
***********************************************************/
select h1name,h1grade
from 	(select H1.name as h1name, H1.grade as h1grade, H2.name as h2name, H2.grade as h2grade
		from Highschooler H1, Friend, Highschooler H2
		where H1.ID=Friend.ID1 and H2.ID=Friend.ID2 
		group by H1.ID
		having count(distinct H2.grade)=1) A
where  h1grade=h2grade
order by h1grade, h1name

/***********************************************************
Q1
1/1 point (graded)
Find the names of all students who are friends with someone named Gabriel.
***********************************************************/


/***********************************************************
Q1
1/1 point (graded)
Find the names of all students who are friends with someone named Gabriel.
***********************************************************/


/***********************************************************
Q1
1/1 point (graded)
Find the names of all students who are friends with someone named Gabriel.
***********************************************************/


